

<%= form_with(model: @video, local: true, url: @video.new_record? ? sales_seller_course_videos_path(@seller, @course) : sales_seller_course_video_path(@seller, @course, @video), id: 'videoForm') do |form| %>
  <% if @video.errors.any? %>
    <div id="error_explanation" class="alert alert-danger" role="alert">
      <h5><%= pluralize(@video.errors.count, "error") %> prohibited this video from being saved:</h5>
      <ul>
      <% @video.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <% if @youtube_access_token %>
    <div class="form-group">
          <%= form.label :nome %>
          <%= form.text_field :nome, id: :nome ,class:"form-control", required:true%>
    </div>
    <div class="form-group">
          <%= form.label :descricao %>
          <%= form.text_area :descricao, id: :descricao ,class:"form-control"%>
    </div>
    <div class="form-group">
          <%= form.label :video %>
          <%= file_field_tag :video, id: :video ,class:"form-control"%>
    </div>
     <div class="form-group mt-2">
         <button type="button" class="btn btn-success" id="uploadButton" onclick="handleUpload()">
             <span id="uploadButtonText">Upload</span>
             <span id="uploadSpinner" class="spinner-border spinner-border-sm me-2" style="display: none;" role="status" aria-hidden="true"></span>
        </button>
    </div>
    <div class="actions" style="display: none;">
      <%= form.submit "Salvar", class:"btn btn-success min-width-btn" %>
    </div>
  <% else %>
    <div>
      <button type="button" class="btn btn-danger" onclick="oAuthYouTube()">
        Autentique-se
      </button>
    </div>
  <% end %>
            
<% end %>

<script>
  let video = null
  document.addEventListener('DOMContentLoaded', function() {
    document.getElementById("video").addEventListener('change', function(e) {
      try {
        if (e.target.files[0]) {
          video = e.target.files[0];
          console.log(video)
        }
      } catch (error) {
        console.log(error)
      }
    });
  });

  let access_token = "<%= @youtube_access_token %>"

  function oAuthYouTube() {
    let client_id = "<%= ENV['OAUTH_CLIENT_ID'] %>";
    let redirect_uri = "<%= ENV['REDIRECT_URI'] %>";
    let scope = ["https://www.googleapis.com/auth/youtube", "https://www.googleapis.com/auth/youtube.upload"];
    let response_type = "token";

    localStorage.setItem("@AppPlataformaCursos/redirect_route", window.location.href)

    window.location.href = "https://accounts.google.com/o/oauth2/auth?client_id=" + client_id + "&redirect_uri=" + redirect_uri + "&scope=" + scope.join("%20") + "&response_type=" + response_type;
  }

  async function handleUpload() {
    let uploadButton = document.getElementById('uploadButton');
    let uploadSpinner = document.getElementById('uploadSpinner');
    const uploadButtonText = document.getElementById('uploadButtonText');

    if (uploadButton && uploadSpinner && uploadButtonText) {
      uploadSpinner.style.display = 'inline-block';
      uploadButtonText.innerText = 'Enviando...';
      uploadButton.disabled = true;
    }

    let title = document.getElementById("nome").value;
    let data = new FormData();
    data.append("token", access_token);
    data.append("video", video);
    data.append("title", title);

    try {
      const response = await fetch('/sales/upload-video', {
        method: 'POST',
        body: data,
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        }
      });

      if (!response.ok) {
        throw new Error('Network response was not ok ' + response.statusText);
      }

      const result = await response.json();

      let input = document.createElement('input');
      input.type = 'hidden';
      input.name = 'sales_video[embed]';
      input.value = result.embed;

      document.getElementById('videoForm').appendChild(input);
      document.getElementById('videoForm').submit();
    } catch (error) {
       window.location.reload();
    } finally {
      resetButton();
    }
  }

  function resetButton() {
    let uploadButton = document.getElementById('uploadButton');
    let uploadSpinner = document.getElementById('uploadSpinner');
    const uploadButtonText = document.getElementById('uploadButtonText');

    if (uploadButton && uploadSpinner && uploadButtonText) {
      uploadSpinner.style.display = 'none';
      uploadButtonText.innerText = 'Upload';  // Volta ao texto original
      uploadButton.disabled = false;
    }
  }
</script>